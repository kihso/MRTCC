function [A,B,C,D,Ms,Cs,Ks] = StructMatrix(par)

NDOF=par.NDOF;

% Masses
MHB=par.MHB;            % Hub mass
MNac=par.Mnac;          % Nacelle mass
Marm=par.Marm;          % Arm mass
MyawP0=par.MyawP0;      % Yaw mass P0
MyawP1=par.MyawP1;      % Yaw mass P1
mt1=par.mt1;            % Tower section 1 mass
mt2=par.mt2;            % Tower section 2 mass

% Stiffnesses
ktP0=par.ktP0;          % Yaw stiffness P0
ktP1=par.ktP1;          % Yaw stiffness P1
ktx02=par.ktx02;            % Torsional stiffness
ktx04=par.ktx04;            % Torsional stiffness
ktx12=par.ktx12;            % Torsional stiffness
ktx14=par.ktx14;            % Torsional stiffness
EIz1=par.EIz1;            % Tower ´bending stiffness 
EIz2=par.EIz2;            % Tower ´bending stiffness 

% Geometry
La02=par.La02;          % Length of arm 02;
La04=par.La04;          % Lenght of arm 04;
La12=par.La12;          % Length of arm 12;
La14=par.La14;          % Length of arm 14;
LNaz=par.LNaz;          % Displacement length of nacelle eq. mass from COG.
LNay=par.LNay;          % Displacement length of nacelle eq. mass from COG.
Lhub=par.Lhub;          % Displacement length of hub from COG.
Lt1=par.Lt1;            % Length of tower section 1
Lt2=par.Lt2;            % Length of tower section 2
ttilt=par.ttilt;

%% Mass matrix
Ms=[(16 * LNay ^ 2 * MNac + 16 * Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 / 0.4e1 + (MHB + MNac + Marm / 0.4e1) * (La02 ^ 2 + La04 ^ 2 + La12 ^ 2 + La14 ^ 2) (8 * LNay ^ 2 * MNac + 8 * Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 / 0.4e1 + (La12 ^ 2 + La14 ^ 2) * (MHB + MNac + Marm / 0.4e1) (MHB + Marm / 0.2e1 + MNac) * (La12 - La04 + La02 - La14) (La12 - La14) * (MHB + Marm / 0.2e1 + MNac) (La12 - La04 + La02 - La14) * (LNay * MNac + Lhub * MHB) * sin(ttilt) + ((-0.2e1 * La02 + 0.2e1 * La04 - 0.2e1 * La12 + 0.2e1 * La14) * LNaz - 0.2e1 * Lt2 * (La12 - La14)) * MNac / 0.2e1 + ((-0.2e1 * La02 + 0.2e1 * La04 - 0.2e1 * La12 + 0.2e1 * La14) * LNaz - 0.2e1 * Lt2 * (La12 - La14)) * MHB / 0.2e1 - Lt2 * Marm * (La12 - La14) / 0.2e1 -(La12 - La14) * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) -La02 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) La04 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) -La12 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) La14 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)); (8 * LNay ^ 2 * MNac + 8 * Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 / 0.4e1 + (La12 ^ 2 + La14 ^ 2) * (MHB + MNac + Marm / 0.4e1) (8 * LNay ^ 2 * MNac + 8 * Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 / 0.4e1 + (La12 ^ 2 + La14 ^ 2) * (MHB + MNac + Marm / 0.4e1) (La12 - La14) * (MHB + Marm / 0.2e1 + MNac) (La12 - La14) * (MHB + Marm / 0.2e1 + MNac) -(La12 - La14) * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + (Lt2 + LNaz) * MNac + (MHB + Marm / 0.2e1) * Lt2 + LNaz * MHB) -(La12 - La14) * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) 0 0 -La12 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) La14 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)); (MHB + Marm / 0.2e1 + MNac) * (La12 - La04 + La02 - La14) (La12 - La14) * (MHB + Marm / 0.2e1 + MNac) 0.13e2 / 0.35e2 * mt1 + 0.13e2 / 0.35e2 * mt2 + MyawP0 + MyawP1 + 0.4e1 * Marm + (4 * MNac) + (4 * MHB) 0.9e1 / 0.70e2 * mt2 + MyawP1 + 0.2e1 * Marm + (2 * MNac) + (2 * MHB) (840 * LNay * MNac + 840 * Lhub * MHB) * sin(ttilt) / 0.210e3 + (-0.420e3 * Marm - 0.210e3 * MyawP1 - (420 * MHB) + 0.11e2 * mt2 - (420 * MNac)) * Lt2 / 0.210e3 - 0.11e2 / 0.210e3 * Lt1 * mt1 - 0.4e1 * LNaz * MHB - 0.4e1 * LNaz * MNac -0.13e2 / 0.420e3 * Lt2 * mt2 - 0.2e1 * LNaz * MNac + 0.2e1 * LNay * MNac * sin(ttilt) - 0.2e1 * LNaz * MHB + 0.2e1 * Lhub * MHB * sin(ttilt) (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac); (La12 - La14) * (MHB + Marm / 0.2e1 + MNac) (La12 - La14) * (MHB + Marm / 0.2e1 + MNac) 0.9e1 / 0.70e2 * mt2 + MyawP1 + 0.2e1 * Marm + (2 * MNac) + (2 * MHB) 0.13e2 / 0.35e2 * mt2 + MyawP1 + 0.2e1 * Marm + (2 * MNac) + (2 * MHB) (840 * LNay * MNac + 840 * Lhub * MHB) * sin(ttilt) / 0.420e3 + (-0.420e3 * MyawP1 - (840 * MHB) + 0.13e2 * mt2 - (840 * MNac) - 0.840e3 * Marm) * Lt2 / 0.420e3 - 0.2e1 * LNaz * (MHB + MNac) -0.11e2 / 0.210e3 * Lt2 * mt2 - 0.2e1 * LNaz * MNac + 0.2e1 * LNay * MNac * sin(ttilt) - 0.2e1 * LNaz * MHB + 0.2e1 * Lhub * MHB * sin(ttilt) 0 0 (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac); (La12 - La04 + La02 - La14) * (LNay * MNac + Lhub * MHB) * sin(ttilt) + ((-0.2e1 * La02 + 0.2e1 * La04 - 0.2e1 * La12 + 0.2e1 * La14) * LNaz - 0.2e1 * Lt2 * (La12 - La14)) * MNac / 0.2e1 + ((-0.2e1 * La02 + 0.2e1 * La04 - 0.2e1 * La12 + 0.2e1 * La14) * LNaz - 0.2e1 * Lt2 * (La12 - La14)) * MHB / 0.2e1 - Lt2 * Marm * (La12 - La14) / 0.2e1 -(La12 - La14) * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + (Lt2 + LNaz) * MNac + (MHB + Marm / 0.2e1) * Lt2 + LNaz * MHB) (840 * LNay * MNac + 840 * Lhub * MHB) * sin(ttilt) / 0.210e3 + (-0.420e3 * Marm - 0.210e3 * MyawP1 - (420 * MHB) + 0.11e2 * mt2 - (420 * MNac)) * Lt2 / 0.210e3 - 0.11e2 / 0.210e3 * Lt1 * mt1 - 0.4e1 * LNaz * MHB - 0.4e1 * LNaz * MNac (840 * LNay * MNac + 840 * Lhub * MHB) * sin(ttilt) / 0.420e3 + (-0.420e3 * MyawP1 - (840 * MHB) + 0.13e2 * mt2 - (840 * MNac) - 0.840e3 * Marm) * Lt2 / 0.420e3 - 0.2e1 * LNaz * (MHB + MNac) (420 * LNay ^ 2 * MNac + 420 * Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 / 0.105e3 - 0.4e1 * (LNay * MNac + Lhub * MHB) * (Lt2 + 0.2e1 * LNaz) * sin(ttilt) + (420 * LNay ^ 2 * MNac + 420 * Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 / 0.105e3 + (0.210e3 * Marm + 0.105e3 * MyawP1 + (210 * MHB) + mt2 + (210 * MNac)) * Lt2 ^ 2 / 0.105e3 + 0.4e1 * LNaz * (MHB + MNac) * Lt2 + Lt1 ^ 2 * mt1 / 0.105e3 + 0.4e1 * MHB * LNaz ^ 2 + 0.4e1 * MNac * LNaz ^ 2 (280 * LNay ^ 2 * MNac + 280 * Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 / 0.140e3 - 0.2e1 * (LNay * MNac + Lhub * MHB) * (Lt2 + 0.2e1 * LNaz) * sin(ttilt) + (280 * LNay ^ 2 * MNac + 280 * Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 / 0.140e3 + (280 * MHB + 280 * MNac) * LNaz ^ 2 / 0.140e3 + 0.2e1 * LNaz * (MHB + MNac) * Lt2 - Lt2 ^ 2 * mt2 / 0.140e3 (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - (LNay * MNac + Lhub * MHB) * (Lt2 + 0.2e1 * LNaz) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz * (MHB + MNac) * (Lt2 + LNaz) (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - (LNay * MNac + Lhub * MHB) * (Lt2 + 0.2e1 * LNaz) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz * (MHB + MNac) * (Lt2 + LNaz); -(La12 - La14) * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) -(La12 - La14) * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) -0.13e2 / 0.420e3 * Lt2 * mt2 - 0.2e1 * LNaz * MNac + 0.2e1 * LNay * MNac * sin(ttilt) - 0.2e1 * LNaz * MHB + 0.2e1 * Lhub * MHB * sin(ttilt) -0.11e2 / 0.210e3 * Lt2 * mt2 - 0.2e1 * LNaz * MNac + 0.2e1 * LNay * MNac * sin(ttilt) - 0.2e1 * LNaz * MHB + 0.2e1 * Lhub * MHB * sin(ttilt) (280 * LNay ^ 2 * MNac + 280 * Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 / 0.140e3 - 0.2e1 * (LNay * MNac + Lhub * MHB) * (Lt2 + 0.2e1 * LNaz) * sin(ttilt) + (280 * LNay ^ 2 * MNac + 280 * Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 / 0.140e3 + (280 * MHB + 280 * MNac) * LNaz ^ 2 / 0.140e3 + 0.2e1 * LNaz * (MHB + MNac) * Lt2 - Lt2 ^ 2 * mt2 / 0.140e3 Lt2 ^ 2 * mt2 / 0.105e3 + 0.2e1 * MNac * LNaz ^ 2 - 0.4e1 * MNac * LNaz * sin(ttilt) * LNay + 0.2e1 * MNac * sin(ttilt) ^ 2 * (LNay ^ 2) + 0.2e1 * MNac * cos(ttilt) ^ 2 * (LNay ^ 2) + 0.2e1 * MHB * LNaz ^ 2 - 0.4e1 * MHB * LNaz * sin(ttilt) * Lhub + 0.2e1 * MHB * sin(ttilt) ^ 2 * (Lhub ^ 2) + 0.2e1 * MHB * cos(ttilt) ^ 2 * (Lhub ^ 2) 0 0 (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac); -La02 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) 0 (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) 0 (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) 0 (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) 0 0 0; La04 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) 0 (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) 0 (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) 0 0 (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) 0 0; -La12 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) -La12 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - (LNay * MNac + Lhub * MHB) * (Lt2 + 0.2e1 * LNaz) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz * (MHB + MNac) * (Lt2 + LNaz) (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) 0 0 (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) 0; La14 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) La14 * ((-LNay * MNac - Lhub * MHB) * sin(ttilt) + LNaz * (MHB + MNac)) (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) (LNay * MNac + Lhub * MHB) * sin(ttilt) - LNaz * (MHB + MNac) (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - (LNay * MNac + Lhub * MHB) * (Lt2 + 0.2e1 * LNaz) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz * (MHB + MNac) * (Lt2 + LNaz) (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac) 0 0 0 (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * sin(ttilt) ^ 2 - 0.2e1 * LNaz * (LNay * MNac + Lhub * MHB) * sin(ttilt) + (LNay ^ 2 * MNac + Lhub ^ 2 * MHB) * cos(ttilt) ^ 2 + LNaz ^ 2 * (MHB + MNac);];

%% Stiffness matrix
Ks=[ktP1 + ktP0 -ktP1 0 0 0 0 0 0 0 0; -ktP1 ktP1 0 0 0 0 0 0 0 0; 0 0 12 * EIz1 / Lt1 ^ 3 + 12 * EIz2 / Lt2 ^ 3 -12 * EIz2 / Lt2 ^ 3 -6 / Lt1 ^ 2 * EIz1 + 6 / Lt2 ^ 2 * EIz2 6 / Lt2 ^ 2 * EIz2 0 0 0 0; 0 0 -12 * EIz2 / Lt2 ^ 3 12 * EIz2 / Lt2 ^ 3 -6 / Lt2 ^ 2 * EIz2 -6 / Lt2 ^ 2 * EIz2 0 0 0 0; 0 0 -6 / Lt1 ^ 2 * EIz1 + 6 / Lt2 ^ 2 * EIz2 -6 / Lt2 ^ 2 * EIz2 ktx02 + ktx04 + 4 / Lt1 * EIz1 + 4 / Lt2 * EIz2 2 / Lt2 * EIz2 -ktx02 -ktx04 0 0; 0 0 6 / Lt2 ^ 2 * EIz2 -6 / Lt2 ^ 2 * EIz2 2 / Lt2 * EIz2 4 / Lt2 * EIz2 + ktx12 + ktx14 0 0 -ktx12 -ktx14; 0 0 0 0 -ktx02 0 ktx02 0 0 0; 0 0 0 0 -ktx04 0 0 ktx04 0 0; 0 0 0 0 0 -ktx12 0 0 ktx12 0; 0 0 0 0 0 -ktx14 0 0 0 ktx14;];

%% Damping matrix
Cs=par.alpha*Ms+par.beta*Ks;

%% System matrix
A = [zeros(NDOF) eye(NDOF);
     -Ms\Ks -Ms\Cs];

SmallB = [La02 * cos(ttilt) -La04 * cos(ttilt) 0 0; 0 0 La12 * cos(ttilt) -La14 * cos(ttilt); cos(ttilt) cos(ttilt) 0 0; 0 0 cos(ttilt) cos(ttilt); (-LNaz + sin(ttilt) * Lhub) * cos(ttilt) - cos(ttilt) * Lhub * sin(ttilt) (-LNaz + sin(ttilt) * Lhub) * cos(ttilt) - cos(ttilt) * Lhub * sin(ttilt) 0 0; 0 0 (-LNaz + sin(ttilt) * Lhub) * cos(ttilt) - cos(ttilt) * Lhub * sin(ttilt) (-LNaz + sin(ttilt) * Lhub) * cos(ttilt) - cos(ttilt) * Lhub * sin(ttilt); (-LNaz + sin(ttilt) * Lhub) * cos(ttilt) - cos(ttilt) * Lhub * sin(ttilt) 0 0 0; 0 (-LNaz + sin(ttilt) * Lhub) * cos(ttilt) - cos(ttilt) * Lhub * sin(ttilt) 0 0; 0 0 (-LNaz + sin(ttilt) * Lhub) * cos(ttilt) - cos(ttilt) * Lhub * sin(ttilt) 0; 0 0 0 (-LNaz + sin(ttilt) * Lhub) * cos(ttilt) - cos(ttilt) * Lhub * sin(ttilt);];

B = [zeros(NDOF,4); Ms\SmallB]; 

C = eye(2*NDOF);

D = zeros(2*NDOF,4);
 
 
 
end
